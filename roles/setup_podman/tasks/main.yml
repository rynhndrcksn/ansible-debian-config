---

- name: Create podman group if needed
  ansible.builtin.group:
    name: "{{ vault_podman_user }}"
    state: present

- name: Create podman user with sudo privileges
  ansible.builtin.user:
    name:  "{{ vault_podman_user }}"
    group: "{{ vault_podman_user }}"
    groups: sudo
    append: true
    shell: /bin/bash
    password: "{{ vault_podman_password }}"
    create_home: true
    state: present
  notify: Expire password

- name: Create ssh directory for podman user
  ansible.builtin.file:
    path: "/home/{{ vault_podman_user }}/.ssh"
    state: directory
    owner: "{{ vault_podman_user }}"
    group: "{{ vault_podman_user }}"
    mode: '0700'

- name: Deploy authorized_keys for podman user
  ansible.builtin.authorized_key:
    user: "{{ vault_podman_user }}"
    key: "{{ vault_admin_ssh_public_key }}"

- name: Configure sudoers for podman user
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ vault_podman_user }}"
    content: "{{ vault_admin_user }} ALL=(ALL) ALL\n"
    owner: root
    group: root
    mode: '0440'

- name: Install Podman and dependencies
  ansible.builtin.apt:
    name: "{{ podman_packages }}"
    state: present
    update_cache: yes

- name: Ensure /etc/subuid entry for podman user
  ansible.builtin.lineinfile:
    path: /etc/subuid
    line: "{{ vault_podman_user }}:100000:65536"
    create: yes
    state: present
    validate: 'cat %s'

- name: Ensure /etc/subgid entry for podman user
  ansible.builtin.lineinfile:
    path: /etc/subgid
    line: "{{ vault_podman_user }}:100000:65536"
    create: yes
    state: present
    validate: 'cat %s'

- name: Ensure Podman config directory exists
  ansible.builtin.file:
    path: "/home/{{ vault_podman_user }}/.config/containers"
    state: directory
    owner: "{{ vault_podman_user }}"
    group: "{{ vault_podman_user }}"
    mode: "0700"

- name: Ensure Podman storage directory exists
  ansible.builtin.file:
    path: "/home/{{ vault_podman_user }}/.local/share/containers/storage"
    state: directory
    owner: "{{ vault_podman_user }}"
    group: "{{ vault_podman_user }}"
    mode: "0700"

- name: Ensure seccomp.json symlink exists for Podman
  ansible.builtin.file:
    src: /usr/share/containers/seccomp.json
    dest: /etc/containers/seccomp.json
    state: link
    force: true

- name: Get podman user UID
  ansible.builtin.getent:
    database: passwd
    key: "{{ vault_podman_user }}"
  register: podman_user_info

- name: Configure /etc/containers/containers.conf for rootless podman
  ansible.builtin.template:
    src: containers.conf.j2
    dest: /home/{{ vault_podman_user }}/.config/containers/containers.conf
    owner: root
    group: root
    mode: '0644'
  vars:
    podman_user_info: "{{ podman_user_info }}"
  notify: Reload podman services

- name: Enable and start podman socket
  ansible.builtin.systemd:
    name: podman.socket
    state: started
    enabled: true
